{"version":3,"file":"contextmenus.min.js","sources":["../../src/extension/contextmenus.js"],"sourcesContent":["/* eslint-disable max-len */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_ibwidgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Common from '../common';\nimport {registerMenuItemProvider} from \"../extension\";\nimport {getUserStorage} from \"../service/userstorage_service\";\nimport {convertInt, findVariableByName, removeStyleMCE, setStyleMCE} from \"../util\";\nimport * as Action from './contextactions';\n// eslint-disable-next-line camelcase\nimport {get_strings} from \"core/str\";\n\nconst {component} = Common;\n\n/**\n * @typedef {{type: string, text: string, icon?: string, onAction: (api?: *) => void}} MenuItem\n * @typedef {{name: string, title: string, condition?: string | RegExp | (() => boolean), icon?: string, onAction?: ()=> void, subMenuItems?: () => (string | MenuItem[])}} UserDefinedItem\n */\n\n/**\n * @param {import(\"../contextinit\").ItemMenuContext} ctx\n * @returns {Promise<UserDefinedItem[]>}\n **/\nasync function provider(ctx) {\n    // Get translations\n    const [\n        strAccept, strAdd, strBeautified, strBehavior, strBig, strCancel, strChooseBackground, strChooseColor,\n        strDependent, strFooter, strFullscreen, strHeader, strImageEffects, strIndependent,\n        strMaxWidthpx, strMedium, strMinusOneNoLimit, strRemove, strRemoveBackground, strResponsivity,\n        strRow, strSmall, strStartsAt, strStartsNumerationAt, strTableWidth, strToBootstrapTable,\n        strToExample2Rows, strToExampleSimple, strToList, strToOneCol, strToPredefinedTable, strToWidgetImage,\n    ] = await get_strings([\n            'accept',\n            'add',\n            'beautified',\n            'behavior',\n            'big',\n            'cancel',\n            'choosebackground',\n            'choosecolor',\n            'dependent',\n            'footer',\n            'fullscreen',\n            'header',\n            'imageeffects',\n            'independent',\n            'maxwidthpx',\n            'medium',\n            'minusonenolimit',\n            'remove',\n            'removebackground',\n            'responsivity',\n            'row',\n            'small',\n            'startsat',\n            'startsnumerationat',\n            'tablewidth',\n            'tobootstraptable',\n            'toexamplerows',\n            'toexamplesimple',\n            'tolist',\n            'toonecol',\n            'topredefinedtable',\n            'towidgetimage',\n        ].map(key => ({key, component})));\n\n    const SUPPORTED_LANGS = [\n        {iso: 'ca', title: 'Català'},\n        {iso: 'es', title: 'Castellà'},\n        {iso: 'en', title: 'English'},\n        {iso: 'fr', title: 'Francès'},\n        {iso: 'de', title: 'Alemany'},\n    ];\n\n    const AVAILABLE_EFFECTS = [\n        {name: 'zoom', title: 'Zoom'},\n        {name: 'lightbox', title: strFullscreen},\n    ];\n\n    const SUPPORTED_SIZES = [\n        {v: 'gran', l: strBig},\n        {v: 'mitjana', l: strMedium},\n        {v: 'petita', l: strSmall},\n    ];\n\n    /**\n     * @param {string} title\n     * @param {string} label\n     * @param {*} initialValue\n     * @param {(api: *) => void} onSubmit\n     */\n    const openInputDialog = function(title, label, initialValue, onSubmit) {\n        ctx.editor?.windowManager.open({\n            title,\n            body: {\n                type: 'panel',\n                items: [\n                    {\n                        type: 'input',\n                        name: 'value',\n                        label: label\n                    }\n                ]\n            },\n            buttons: [\n                {\n                    type: 'submit',\n                    text: strAccept\n                }\n            ],\n            initialData: {\n                value: initialValue\n            },\n            onSubmit\n        });\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const imageEffectsNestedMenu = {\n        name: 'imageEffects',\n        condition: 'imatge',\n        title: strImageEffects,\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            if (!elem) {\n                return '';\n            }\n            if (!elem.getAttribute('data-snptd')) {\n                return AVAILABLE_EFFECTS.map(e => ({\n                    type: 'menuitem',\n                    text: e.title,\n                    onAction: Action.addImageEffectAction.bind({ctx, type: e.name})\n                }));\n            } else {\n                return [{\n                    type: 'menuitem',\n                    icon: 'remove',\n                    text: strRemove,\n                    onAction: Action.removeImageEffectsAction.bind({ctx})\n                }];\n            }\n        }\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const imageSwitchToSnippet = {\n        name: 'imageSwitchToSnippet',\n        condition: () => {\n            // We are not inside a widget image and the\n            // selectedElement right clicked must be a tag img\n            const key = ctx.path?.widget?.key;\n            const elem = ctx.path?.selectedElement;\n            const isImg = (\n                key !== undefined &&\n                key !== 'imatge' &&\n                key !== 'grid-imatge' &&\n                elem?.tagName === 'IMG' &&\n                // Do not take into account images in ib-card\n                !elem?.classList?.contains('card-img-top'));\n            if (ctx.path && isImg && elem) {\n                ctx.path.targetElement = elem;\n            }\n            return isImg;\n        },\n        title: strToWidgetImage,\n        onAction: Action.imageSwitchToSnippetAction.bind({ctx})\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const changeBoxLanguageNestedMenu = {\n        name: 'changeBoxLanguage',\n        condition: /capsa-.*|tasca-exercici/,\n        title: 'Idioma',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            if (!elem) {\n                return '';\n            }\n            const currentLang = elem.getAttribute('data-lang') ?? '';\n            return SUPPORTED_LANGS.map(({iso, title}) => ({\n                type: 'menuitem',\n                text: title,\n                icon: iso === currentLang ? 'checkmark' : undefined,\n                onAction: Action.changeBoxLangAction.bind({ctx, iso})\n            }));\n        }\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const changeBoxSizeNestedMenu = {\n        name: 'changeBoxSize',\n        condition: /^capsa-.*|^tasca-exercici$/,\n        title: 'Mida',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            const widget = ctx.path?.widget;\n            if (!elem || !widget) {\n                return '';\n            }\n            const sizes = findVariableByName('mida', widget.parameters)?.options;\n            return (sizes || SUPPORTED_SIZES).map((/** @type {*}*/ e) => ({\n                type: 'menuitem',\n                text: e.l ?? e,\n                icon: elem.classList.contains('iedib-capsa-' + (e.v ?? e)) ? 'checkmark' : undefined,\n                onAction: Action.changeBoxSizeAction.bind({ctx, size: e.v ?? e})\n            }));\n        }\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const changeBoxSeverityNestedMenu = {\n        name: 'changeBoxSeverity',\n        condition: 'capsa-generica',\n        title: 'Tipus',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            const widget = ctx.path?.widget;\n            if (!elem || !widget) {\n                return '';\n            }\n            const severities = findVariableByName('severity', widget.parameters)?.options;\n            return (severities || []).map((/** @type {*}*/ e) => ({\n                type: 'menuitem',\n                text: e.l ?? e,\n                icon: elem.classList.contains('iedib-' + (e.v ?? e) + '-border') ? 'checkmark' : undefined,\n                onAction: Action.changeBoxSeverityAction.bind({ctx, severity: e.v ?? e})\n            }));\n        }\n    };\n\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const twoColumnsNestedMenu = {\n        name: 'twoColumnsNestedMenu',\n        condition: 'two-cols',\n        title: 'Mida columnes',\n        subMenuItems: () => {\n            const elem = ctx.path?.elem;\n            const widget = ctx.path?.widget;\n            if (!elem || !widget) {\n                return '';\n            }\n            /** @type {*} */\n            const menuItems = [{\n                type: 'menuitem',\n                text: strToOneCol,\n                onAction: Action.changeColumnWidth.bind({ctx, colSpan: 0})\n            }];\n\n            const firstDiv = elem.querySelector('div:first-child');\n            const firstSpan = firstDiv\n                ? (firstDiv.className?.split(' ') ?? [])\n                    .filter(c => c.startsWith('span'))\n                    .map(c => c.replace('span', ''))[0]\n                : undefined;\n\n            for (let i = 2; i < 12; i = i + 2) {\n                const tpc = parseInt((100 * i / 12.0).toFixed(0));\n                const label = tpc + \"% | \" + (100 - tpc) + \"%\";\n                let isCurrent = firstSpan && convertInt(firstSpan, 0) == i;\n                menuItems.push({\n                    type: 'menuitem',\n                    text: label,\n                    icon: isCurrent ? 'checkmark' : undefined,\n                    onAction: Action.changeColumnWidth.bind({ctx, colSpan: i})\n                });\n            }\n            return menuItems;\n        }\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const switchBoxRowsExample = {\n        name: 'switchBoxRowsExample',\n        condition: 'capsa-exemple-cols',\n        title: strToExample2Rows,\n        onAction: Action.switchBoxRowsExampleAction.bind({ctx})\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const switchBoxSimpleExample = {\n        name: 'switchBoxSimpleExample',\n        condition: 'capsa-exemple-rows',\n        title: strToExampleSimple,\n        onAction: Action.switchBoxSimpleExampleAction.bind({ctx})\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const numberedListNestedMenu = {\n        name: 'numberedListNestedMenu',\n        condition: () => {\n            const selectedElement = ctx.path?.selectedElement;\n            // It must search an OL in the path, probably selectedElement is LI or so!!!!!\n            const target = selectedElement?.closest(\"ol\");\n            if (ctx.path && target) {\n                ctx.path.targetElement = target;\n            }\n            return target !== undefined;\n        },\n        icon: 'list-num-default',\n        title: 'Llista',\n        subMenuItems: () => {\n            // Determine if the class is there\n            const isBeauty = ctx.path?.targetElement?.classList?.contains('iedib-falist');\n            return [\n                {\n                    type: 'menuitem',\n                    text: strBeautified,\n                    icon: isBeauty ? 'checkmark' : undefined,\n                    onAction: () => {\n                        // Toggle class\n                        const target = ctx.path?.targetElement;\n                        if (!target || !(target instanceof HTMLElement)) {\n                            return;\n                        }\n                        target.classList.toggle('iedib-falist');\n                        // Make sure that start and style are in sync\n                        const startAt = target.getAttribute(\"start\") || \"1\";\n                        if (target.classList.contains('iedib-falist')) {\n                            const beginAt = parseInt(startAt);\n                            setStyleMCE(target, \"counter-reset\", \"iedibfalist-counter \" + (beginAt - 1));\n                        } else {\n                            removeStyleMCE(target, \"counter-reset\");\n                        }\n                    }\n                },\n                {\n                    type: 'menuitem',\n                    text: strStartsAt,\n                    onAction: () => {\n                        // Get the start property of the list\n                        const startAt1 = ctx.path?.targetElement?.getAttribute(\"start\") ?? \"1\";\n                        // Open input dialog, set the value and retrieve new value\n                        openInputDialog(strStartsNumerationAt + ' ...', '', startAt1,\n                            (/** @type {*} */ api) => {\n                                // TODO: Opened issue: Closing a tiny dialog -- afects the main bootstap dialog\n                                api.close();\n                                const target = ctx.path?.targetElement;\n                                if (!target || !(target instanceof HTMLElement)) {\n                                    return;\n                                }\n                                // Change the number at which start\n                                const startAt2 = api.getData().value ?? \"1\";\n                                const beginAt3 = convertInt(startAt2, 1);\n                                target.setAttribute(\"start\", beginAt3 + '');\n                                setStyleMCE(target, \"counter-reset\", \"iedibfalist-counter \" + (beginAt3 - 1));\n                            });\n                    },\n                }\n            ];\n        }\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const accordionIndependentBehaviorNestedMenu = {\n        name: 'accordionIndependentBehavior',\n        condition: 'desplegable2',\n        title: strBehavior,\n        subMenuItems: () => {\n            const target = ctx.path?.elem;\n            if (!target) {\n                return '';\n            }\n            // Is Accordion behavior?\n            const accordionBody = target.querySelector(\"div.accordion-body\");\n            const isDependentBehavior =\n                ((accordionBody?.getAttribute(\"data-parent\") ??\n                    accordionBody?.getAttribute(\"data-bs-parent\")) ?? null) !== null;\n\n            return [false, true].map(opt => ({\n                type: 'menuitem',\n                text: opt ? strIndependent : strDependent,\n                icon: isDependentBehavior === opt ? undefined : 'checkmark',\n                onAction: Action.setAccordionBehavior.bind({ctx, isDependentBehavior: opt})\n            }));\n        }\n    };\n\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const tablesMaxWidthMenu = {\n        name: 'tablesMaxWidthMenu',\n        condition: 'taula-predefinida,taula-bs',\n        title: strTableWidth,\n        onAction: () => {\n            const target = ctx.path?.elem;\n            if (!target || !(target instanceof HTMLElement)) {\n                return;\n            }\n            // Get the initial width\n            const startAt1 = (target.style.getPropertyValue(\"max-width\") || \"-1\")\n                .replace(\"px\", \"\").replace(\"none\", \"-1\");\n            // Open input dialog, set the value and retrieve new value\n            openInputDialog(strMaxWidthpx, strMinusOneNoLimit, startAt1,\n                (/** @type {*} */ api) => {\n                    const target = ctx.path?.elem;\n                    if (!target || !(target instanceof HTMLElement)) {\n                        return;\n                    }\n                    const maxwidth = convertInt(api.getData().value.replace(\"px\", \"\").trim(), 0);\n                    if (maxwidth > 0) {\n                        setStyleMCE(target, \"max-width\", maxwidth + \"px\");\n                    } else {\n                        removeStyleMCE(target, \"max-width\");\n                    }\n                    api.close();\n                });\n        },\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const convertToBsTableMenu = {\n        name: 'convertToBsTableMenu',\n        condition: 'taula-predefinida',\n        title: strToBootstrapTable,\n        onAction: Action.convert2BootstrapTable.bind({ctx}),\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const convertToPredefinedTableMenu = {\n        name: 'convertToPredefinedTableMenu',\n        condition: 'taula-bs',\n        title: strToPredefinedTable,\n        onAction: Action.convert2PrefefinedTable.bind({ctx}),\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const responsivenessNestedMenu = {\n        name: 'responsivenessNestedMenu',\n        condition: 'taula-bs',\n        title: strResponsivity,\n        subMenuItems: () => {\n            const target = ctx.path?.elem;\n            if (!target) {\n                return '';\n            }\n            // Is responsiveness active\n            const isResponsive = target.parentElement?.classList.contains('table-responsive');\n\n            return [{\n                type: 'menuitem',\n                text: isResponsive ? strRemove : strAdd,\n                onAction: Action.toggleBootstapTableResponsiveness.bind({ctx})\n            }];\n        }\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const tablesHeaderNestedMenu = {\n        name: 'tablesHeaderNestedMenu',\n        condition: 'taula-predefinida,taula-bs',\n        title: strHeader,\n        subMenuItems: () => {\n            const target = ctx.path?.elem;\n            if (!target) {\n                return '';\n            }\n            const hasHeader = target.querySelector('thead') !== null;\n\n            return [{\n                type: 'menuitem',\n                text: hasHeader ? strRemove : strAdd,\n                onAction: Action.toggleTableHeader.bind({ctx})\n            }];\n        }\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const tablesFooterNestedMenu = {\n        name: 'tablesFooterNestedMenu',\n        condition: 'taula-predefinida,taula-bs',\n        title: strFooter,\n        subMenuItems: () => {\n            const target = ctx.path?.elem;\n            if (!target) {\n                return '';\n            }\n            const hasFooter = target.querySelector('tfoot') !== null;\n\n            return [{\n                type: 'menuitem',\n                text: hasFooter ? strRemove : strAdd,\n                onAction: Action.toggleTableFooter.bind({ctx})\n            }];\n        }\n    };\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const convertDropdownToList = {\n        name: 'convertDropdownToList',\n        condition: 'desplegable2',\n        title: strToList,\n        onAction: Action.convertDropdownToList.bind({ctx}),\n    };\n\n    /**\n     *\n     * @param {import(\"../plugin\").TinyMCE} editor\n     * @param {(color: string) => void} cbAccept\n     */\n    function colorPicker(editor, cbAccept) {\n        // Get last value from localStorage or white\n        const storageSrv = getUserStorage(editor);\n        const iniValue = storageSrv.getFromLocal('pickercolor', '#FFFFFF');\n        /** @type {HTMLElement | null | undefined} */\n        let container;\n        /** @type {(e: any) => void | null | undefined} */\n        let handleClick;\n\n        editor.windowManager.open({\n            title: strChooseColor,\n            body: {\n                type: 'panel',\n                items: [\n                    {\n                        type: 'htmlpanel',\n                        html: `<input type=\"color\" id=\"tiny_ibwidgethub_colorinput\" value=\"${iniValue}\" style=\"width:100%; height:50px;\" />\n                    <div id=\"tiny_ibwidgethub_preset-colors\" style=\"margin: 8px;\">\n                        <button type=\"button\" data-color=\"#BFEDD2\" style=\"background:#BFEDD2; width:24px; height:24px; border:none; margin-right:4px;\"></button>\n                        <button type=\"button\" data-color=\"#FBEEB8\" style=\"background:#FBEEB8; width:24px; height:24px; border:none; margin-right:4px;\"></button>\n                        <button type=\"button\" data-color=\"#F8CAC6\" style=\"background:#F8CAC6; width:24px; height:24px; border:none; margin-right:4px\"></button>\n                        <button type=\"button\" data-color=\"#ECCAFA\" style=\"background:#ECCAFA; width:24px; height:24px; border:none; margin-right:4px;\"></button>\n                        <button type=\"button\" data-color=\"#C2E0F4\" style=\"background:#C2E0F4; width:24px; height:24px; border:none; margin-right:4px;\"></button>\n                        <button type=\"button\" data-color=\"#ECF0F1\" style=\"background:#ECF0F1; width:24px; height:24px; border:none; margin-right:4px\"></button>\n                        <button type=\"button\" data-color=\"#CED4D9\" style=\"background:#CED4D9; width:24px; height:24px; border:none;\"></button>\n                    </div>`\n                    }\n                ]\n            },\n            buttons: [\n                {\n                    type: 'cancel',\n                    text: strCancel\n                },\n                {\n                    type: 'submit',\n                    text: strAccept,\n                    primary: true\n                }\n            ],\n            onSubmit: (/** @type{*} **/ api) => {\n                /** @type {any} */\n                const control = document.getElementById('tiny_ibwidgethub_colorinput');\n                if (control?.value) {\n                    cbAccept?.(control.value);\n                    storageSrv.setToLocal('pickercolor', control.value, true);\n                }\n                api.close();\n                if (container && handleClick) {\n                    container.removeEventListener('click', handleClick);\n                }\n            }\n        });\n\n        // Afegeix el codi fora del `open`, amb `setTimeout` perquè el DOM estigui preparat\n        setTimeout(() => {\n            container = document.getElementById('tiny_ibwidgethub_preset-colors');\n            if (container) {\n                handleClick = (/** @type {*} */ e) => {\n                    const target = e.target.closest('button');\n                    if (target) {\n                        const color = target.dataset.color;\n                        /** @type{any} */\n                        const input = document.getElementById('tiny_ibwidgethub_colorinput');\n                        if (input) {\n                            input.value = color;\n                        }\n                    }\n                };\n                container.addEventListener('click', handleClick);\n            }\n        }, 300);\n    }\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const tablesCellColorNestedMenu = {\n        name: 'tablesCellColorNestedMenu',\n        condition: () => {\n            return !!ctx.path?.selectedElement?.closest(\"table\");\n        },\n        title: 'Cel·la',\n        subMenuItems: () => {\n            const cell = ctx.path?.selectedElement?.closest('td, th');\n            if (!cell || !(cell instanceof HTMLElement)) {\n                return '';\n            }\n            const menus = [\n                {\n                    type: 'menuitem',\n                    text: strChooseBackground,\n                    onAction: () => {\n                        colorPicker(ctx.editor,\n                            (/** @type {string} */ color) => {\n                                setStyleMCE(cell, 'background-color', color);\n                            }\n                        );\n                    }\n                }\n            ];\n\n            if (cell.style.backgroundColor) {\n                menus.push({\n                    type: 'menuitem',\n                    text: strRemoveBackground,\n                    onAction: () => {\n                        removeStyleMCE(cell, 'background-color');\n                    }\n                });\n            }\n\n            return menus;\n        }\n    };\n\n\n    /**\n     * @type {UserDefinedItem}\n     */\n    const tablesRowColorNestedMenu = {\n        name: 'tablesRowColorNestedMenu',\n        condition: () => {\n            return !!ctx.path?.selectedElement?.closest(\"table\");\n        },\n        title: strRow,\n        subMenuItems: () => {\n            const row = ctx.path?.selectedElement?.closest('tr');\n            if (!row || !(row instanceof HTMLElement)) {\n                return '';\n            }\n            const menus = [\n                {\n                    type: 'menuitem',\n                    text: strChooseBackground,\n                    onAction: () => {\n                        colorPicker(ctx.editor,\n                            (/** @type {string} */ color) => {\n                                setStyleMCE(row, 'background-color', color);\n                            }\n                        );\n                    }\n                }\n            ];\n            if (row.style.backgroundColor) {\n                menus.push({\n                    type: 'menuitem',\n                    text: strRemoveBackground,\n                    onAction: () => {\n                        removeStyleMCE(row, 'background-color');\n                    }\n                });\n            }\n            return menus;\n        }\n    };\n\n    return [\n        // Image actions\n        imageEffectsNestedMenu,\n        imageSwitchToSnippet,\n\n        // Box actions\n        changeBoxLanguageNestedMenu,\n        changeBoxSizeNestedMenu,\n        changeBoxSeverityNestedMenu,\n        switchBoxRowsExample,\n        switchBoxSimpleExample,\n\n        // Others\n        accordionIndependentBehaviorNestedMenu,\n        numberedListNestedMenu,\n        twoColumnsNestedMenu,\n        convertDropdownToList,\n\n        // Tables\n        tablesMaxWidthMenu,\n        convertToBsTableMenu,\n        convertToPredefinedTableMenu,\n        responsivenessNestedMenu,\n        tablesHeaderNestedMenu,\n        tablesFooterNestedMenu,\n        tablesCellColorNestedMenu,\n        tablesRowColorNestedMenu,\n    ];\n}\n\nregisterMenuItemProvider(provider);"],"names":["component","Common","ctx","strAccept","strAdd","strBeautified","strBehavior","strBig","strCancel","strChooseBackground","strChooseColor","strDependent","strFooter","strFullscreen","strHeader","strImageEffects","strIndependent","strMaxWidthpx","strMedium","strMinusOneNoLimit","strRemove","strRemoveBackground","strResponsivity","strRow","strSmall","strStartsAt","strStartsNumerationAt","strTableWidth","strToBootstrapTable","strToExample2Rows","strToExampleSimple","strToList","strToOneCol","strToPredefinedTable","strToWidgetImage","map","key","SUPPORTED_LANGS","iso","title","AVAILABLE_EFFECTS","name","SUPPORTED_SIZES","v","l","openInputDialog","label","initialValue","onSubmit","editor","windowManager","open","body","type","items","buttons","text","initialData","value","imageEffectsNestedMenu","condition","subMenuItems","elem","path","_ctx$path","getAttribute","icon","onAction","Action","removeImageEffectsAction","bind","e","addImageEffectAction","imageSwitchToSnippet","_ctx$path2","widget","_ctx$path2$widget","_ctx$path3","selectedElement","isImg","undefined","tagName","classList","_elem$classList","contains","targetElement","imageSwitchToSnippetAction","changeBoxLanguageNestedMenu","_ctx$path4","currentLang","_ref","changeBoxLangAction","changeBoxSizeNestedMenu","_ctx$path5","_ctx$path6","parameters","_findVariableByName","options","changeBoxSizeAction","size","changeBoxSeverityNestedMenu","_ctx$path7","_ctx$path8","_findVariableByName2","changeBoxSeverityAction","severity","twoColumnsNestedMenu","_ctx$path9","_ctx$path10","menuItems","changeColumnWidth","colSpan","firstDiv","querySelector","firstSpan","className","split","filter","c","startsWith","replace","i","tpc","parseInt","toFixed","isCurrent","push","switchBoxRowsExample","switchBoxRowsExampleAction","switchBoxSimpleExample","switchBoxSimpleExampleAction","numberedListNestedMenu","_ctx$path11","target","closest","isBeauty","_ctx$path12","_ctx$path12$targetEle","_ctx$path12$targetEle2","_ctx$path13","HTMLElement","toggle","startAt","beginAt","startAt1","api","close","_ctx$path15","startAt2","getData","beginAt3","setAttribute","accordionIndependentBehaviorNestedMenu","_ctx$path16","accordionBody","isDependentBehavior","opt","setAccordionBehavior","tablesMaxWidthMenu","_ctx$path17","style","getPropertyValue","_ctx$path18","maxwidth","trim","convertToBsTableMenu","convert2BootstrapTable","convertToPredefinedTableMenu","convert2PrefefinedTable","responsivenessNestedMenu","_ctx$path19","parentElement","_target$parentElement","toggleBootstapTableResponsiveness","tablesHeaderNestedMenu","_ctx$path20","toggleTableHeader","tablesFooterNestedMenu","_ctx$path21","toggleTableFooter","colorPicker","cbAccept","storageSrv","iniValue","getFromLocal","container","handleClick","html","primary","control","document","getElementById","setToLocal","removeEventListener","setTimeout","color","dataset","input","addEventListener","convertDropdownToList","_ctx$path22","_ctx$path22$selectedE","cell","_ctx$path23","_ctx$path23$selectedE","menus","backgroundColor","_ctx$path24","_ctx$path24$selectedE","row","_ctx$path25","_ctx$path25$selectedE"],"mappings":"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"}