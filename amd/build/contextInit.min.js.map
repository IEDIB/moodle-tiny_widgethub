{"version":3,"file":"contextinit.min.js","sources":["../src/contextinit.js"],"sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable max-len */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {getWidgetDict} from './options';\nimport jQuery from \"jquery\";\nimport {getDomSrv} from './service/dom_service';\nimport {getWidgetPropertiesCtrl} from './controller/widgetproperties_ctrl';\nimport {getMenuItemProviders, getListeners} from './extension';\nimport {get_strings} from 'core/str';\n\n/**\n * Tiny WidgetHub plugin.\n *\n * @module      tiny_ibwidgethub/plugin\n * @copyright   2024 Josep Mulet Pol <pep.mulet@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Defines the type PathResult\n * @typedef {Object} PathResult\n * @property {JQuery<HTMLElement>} selectedElement - The DOM element from which the search starts.\n * @property {JQuery<HTMLElement>} [elem] - Indicates the element corresponding to the selector of the widget found\n * @property {JQuery<HTMLElement>} [targetElement] - Indicates the element corresponding the intermediate selector\n * @property {import('./options').Widget} [widget] - The current widget definition associated with the elem\n */\n\n/**\n * @typedef {Object} ICONS\n * @property {string} gear\n * @property {string} arrowUpFromBracket\n * @property {string} arrowUp\n * @property {string} arrowDown\n * @property {string} arrowLeft\n * @property {string} arrowRight\n * @property {string} remove\n * @property {string} clone\n */\nconst ICONS = {\n    gear: 'gear',\n    arrowUpFromBracket: 'arrow-up-from-bracket',\n    arrowUp: 'arrow-up',\n    arrowDown: 'arrow-down',\n    arrowLeft: 'arrow-left',\n    arrowRight: 'arrow-right',\n    remove: 'remove',\n    clone: 'clone'\n};\n\n/**\n * Define icons used by the context menus. Source: FontAwesome 6\n * <!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->\n * @param {import(\"./plugin\").TinyMCE} editor - The tinyMCE editor instance\n */\nconst defineIcons = function(editor) {\n    editor.ui.registry.addIcon(ICONS.gear, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\"><path d=\"M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowUpFromBracket, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M246.6 9.4c-12.5-12.5-32.8-12.5-45.3 0l-128 128c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 109.3 192 320c0 17.7 14.3 32 32 32s32-14.3 32-32l0-210.7 73.4 73.4c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-128-128zM64 352c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 64c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-64z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowUp, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 384 512\"><path d=\"M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0l-160 160c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 141.2 160 448c0 17.7 14.3 32 32 32s32-14.3 32-32l0-306.7L329.4 246.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-160-160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowDown, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 384 512\"><path d=\"M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowLeft, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.arrowRight, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 448 512\"><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>');\n    editor.ui.registry.addIcon(ICONS.clone, '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\"><path d=\"M64 464l224 0c8.8 0 16-7.2 16-16l0-64 48 0 0 64c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 224c0-35.3 28.7-64 64-64l64 0 0 48-64 0c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16zM224 304l224 0c8.8 0 16-7.2 16-16l0-224c0-8.8-7.2-16-16-16L224 48c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16zm-64-16l0-224c0-35.3 28.7-64 64-64L448 0c35.3 0 64 28.7 64 64l0 224c0 35.3-28.7 64-64 64l-224 0c-35.3 0-64-28.7-64-64z\"/></svg>');\n};\n\n/**\n * @param {import('./options').Widget} widget\n * @returns {boolean}\n */\nfunction hasBindings(widget) {\n    return widget.parameters?.some(param => param.bind !== undefined);\n}\n\n/**\n * Decides if a widget needs some kind of context menu or toolbar\n * @param {import('./options').Widget} widget - The widget\n * @returns {boolean}\n */\nconst needsContextMenu = function(widget) {\n    return widget.hasBindings() || (widget.unwrap ?? '').trim().length > 0;\n};\n\n/**\n * @param {string | RegExp | (() => boolean) | undefined} condition\n * @param {string} key\n * @returns {boolean}\n */\nconst matchesCondition = function(condition, key) {\n    if (typeof condition === 'string') {\n        return condition.split(',').map(e => e.trim()).includes(key);\n    } else if (condition instanceof RegExp) {\n        return condition.test(key);\n    } else if (typeof condition === 'function') {\n        return condition();\n    }\n    return false;\n};\n\n/**\n * @param {import('./plugin').TinyMCE} editor\n * @param {import('./service/dom_service').DomSrv} domSrv\n */\nconst predefinedActionsFactory = function(editor, domSrv) {\n    /** @type {Record<string, Function>} */\n    const factory = {\n        /**\n         * Unwraps or destroys the contents of a widget\n         * @param {PathResult} path\n         */\n        unwrap: (path) => {\n            if (!path?.elem || !path?.widget?.unwrap) {\n                return;\n            }\n            /** @type {JQuery<HTMLElement> | string} */\n            let toUnpack = path.elem.find(path.widget.unwrap);\n            if (!toUnpack[0]) {\n                // Create a text element\n                toUnpack = path.elem.text();\n            }\n            path.elem.replaceWith(toUnpack);\n            // Call any subscribers\n            getListeners('widgetRemoved').forEach(listener => listener(editor, path.widget));\n        },\n        /**\n         * Moves the selected element above in the parent container\n         * unless it is the first one\n         * Only on tabbed widgets!\n         * If $e or any of its descendants references another element in\n         * the widget, then it also must be moved before its sibling\n         * @param {PathResult} path\n         */\n        movebefore: (path) => {\n            const $e = path?.targetElement;\n            const $root = path?.elem;\n            if (!$e || !$root) {\n                return;\n            }\n            const prev = $e.prev();\n            if (prev) {\n                prev.insertAfter($e);\n                if (prev.closest(\".nav\").length) {\n                    domSrv.findReferences($e, $root).forEach($ref => {\n                        const prev2 = $ref.prev();\n                        if (prev2) {\n                            prev2.insertAfter($ref);\n                        }\n                    });\n                }\n            }\n        },\n        /**\n         * Moves the selected element above in the parent container\n         * unless it is the first one\n         * Only on tabbed widgets!\n         * If $e or any of its descendants references another element in\n         * the widget, then it also must be moved after its sibling\n         * @param {PathResult} path\n         */\n        moveafter: (path) => {\n            const $e = path?.targetElement;\n            const $root = path?.elem;\n            if (!$e || !$root) {\n                return;\n            }\n            const next = $e.next();\n            if (next) {\n                next.insertBefore($e);\n                if (next.closest(\".nav\").length) {\n                    domSrv.findReferences($e, $root).forEach($ref => {\n                        const next2 = $ref.next();\n                        if (next2) {\n                            next2.insertBefore($ref);\n                        }\n                    });\n                }\n            }\n        },\n        /**\n         * Inserts a clone of the selected element after it\n         * @param {PathResult} path\n         */\n        insertafter: (path) => {\n            const $e = path?.targetElement;\n            const $root = path?.elem;\n            if (!$e || !$root) {\n                return;\n            }\n            /** @type {Record<string, string>} */\n            const idMap = {};\n            const clone = domSrv.smartClone($e, $root, idMap);\n            clone.insertAfter($e).removeClass(\"active show\");\n        },\n        /**\n         * Removes the selected element\n         * @param {PathResult} path\n         */\n        remove: (path) => {\n            const $e = path?.targetElement;\n            const $root = path?.elem;\n            if (!$e || !$root) {\n                return;\n            }\n            // Does the $e or its descendants reference another element in the widget?\n            // If so, it must be removed too\n            domSrv.findReferences($e, $root).forEach($ref => $ref.remove());\n            const $parent = $e.parent();\n            $e.remove();\n            if ($parent.children().length === 0) {\n                // Good candidate to remove the entire widget\n                $root.remove();\n            }\n        },\n        /**\n         * Toggles a snippet as printable or not\n         * @param {PathResult} path\n         */\n        printable: (path) => {\n            const elem = path?.elem;\n            if (!elem) {\n                return;\n            }\n            elem.toggleClass('d-print-none');\n        }\n    };\n    factory.moveup = factory.movebefore;\n    factory.movedown = factory.moveafter;\n    // Alias.\n    factory.moveleft = factory.movebefore;\n    factory.moveright = factory.moveafter;\n    return factory;\n};\n\n/**\n * @typedef {{editor: import('./plugin').TinyMCE, path?: PathResult, jQuery: JQueryStatic, actionPaths: Record<string, PathResult>}} ItemMenuContext\n */\n\n/**\n * Looks for widgets that need to display context toolbars or menus\n * and binds the corresponding actions.\n * @param {import(\"./plugin\").TinyMCE} editor\n */\nexport async function initContextActions(editor) {\n    // Setup context shared by the entire structure of menus\n    /**\n     * Keep track of the last context found\n     * @type {ItemMenuContext}\n     */\n    const ctx = {\n        actionPaths: {},\n        editor: editor,\n        jQuery\n    };\n\n    // Define icons\n    defineIcons(editor);\n\n    // Get translations\n    const component = 'tiny_ibwidgethub';\n    const [\n        strProperties, strUnwrap, strMoveUp, strMoveDown, strMoveAfter, strMoveBefore,\n        strInsert, strRemove, strPrintable\n    ] = await get_strings([\n        {key: 'properties', component},\n        {key: 'unwrap', component},\n        {key: 'moveup', component},\n        {key: 'movedown', component},\n        {key: 'moveafter', component},\n        {key: 'movebefore', component},\n        {key: 'insert', component},\n        {key: 'remove', component},\n        {key: 'printable', component}\n    ]);\n\n    const widgetList = Object.values(getWidgetDict(editor));\n    const domSrv = getDomSrv();\n\n    /** @type {Record<string, Function>} */\n    const predefinedActions = predefinedActionsFactory(editor, domSrv);\n\n    const showPropertiesAction = async() => {\n        const path = domSrv.findWidgetOnEventPath(widgetList, editor.selection.getNode());\n        ctx.path = path;\n        if (!path.widget) {\n            return;\n        }\n        // Display modal dialog on this context\n        const widgetPropertiesCtrl = getWidgetPropertiesCtrl(editor);\n        await widgetPropertiesCtrl.show(path);\n    };\n\n    // Generic button action for opening the properties modal\n    editor.ui.registry.addButton('widgethub_modal_btn', {\n        icon: ICONS.gear,\n        tooltip: strProperties,\n        onAction: showPropertiesAction\n    });\n    editor.ui.registry.addMenuItem('widgethub_modal_item', {\n        icon: ICONS.gear,\n        text: strProperties,\n        onAction: showPropertiesAction\n    });\n\n    /**\n     * Defines a generic action.\n     * @param {string} name\n     */\n    function genericAction(name) {\n        return function() {\n            let path = ctx.actionPaths[name];\n            if (!path) {\n                path = domSrv.findWidgetOnEventPath(widgetList, editor.selection.getNode());\n                if (!path.widget) {\n                    return;\n                }\n            }\n            const action = predefinedActions[name];\n            if (action) {\n                // Make sure that generic actions use the right path object.\n                // Define one path per action.\n                action(path);\n                // Call any subscriber.\n                getListeners('ctxAction').forEach(listener => listener(editor, path.widget));\n            }\n        };\n    }\n\n    // Generic button action for unwrapping those widgets that support this feature.\n    editor.ui.registry.addButton('widgethub_unwrap_btn', {\n        icon: ICONS.arrowUpFromBracket,\n        tooltip: strUnwrap,\n        onAction: genericAction('unwrap')\n    });\n    editor.ui.registry.addMenuItem('widgethub_unwrap_item', {\n        icon: ICONS.arrowUpFromBracket,\n        text: strUnwrap,\n        onAction: genericAction('unwrap')\n    });\n    editor.ui.registry.addMenuItem('widgethub_moveup_item', {\n        icon: ICONS.arrowUp,\n        text: strMoveUp,\n        onAction: genericAction('moveup')\n    });\n    editor.ui.registry.addMenuItem('widgethub_movedown_item', {\n        icon: ICONS.arrowDown,\n        text: strMoveDown,\n        onAction: genericAction('movedown')\n    });\n    editor.ui.registry.addMenuItem('widgethub_moveleft_item', {\n        icon: ICONS.arrowLeft,\n        text: strMoveBefore,\n        onAction: genericAction('movebefore')\n    });\n    editor.ui.registry.addMenuItem('widgethub_moveright_item', {\n        icon: ICONS.arrowRight,\n        text: strMoveAfter,\n        onAction: genericAction('moveafter')\n    });\n    editor.ui.registry.addMenuItem('widgethub_insertafter_item', {\n        icon: ICONS.clone,\n        text: strInsert,\n        onAction: genericAction('insertafter')\n    });\n    editor.ui.registry.addMenuItem('widgethub_remove_item', {\n        icon: ICONS.remove,\n        text: strRemove,\n        onAction: genericAction('remove')\n    });\n    editor.ui.registry.addToggleMenuItem('widgethub_printable_item', {\n        icon: 'print',\n        text: strPrintable,\n        onAction: genericAction('printable'),\n        onSetup: (/** @type {*} */ api) => {\n            let toggleState = true;\n            if (ctx.path?.elem?.hasClass('d-print-none')) {\n                toggleState = false;\n            }\n            api.setActive(toggleState);\n            return () => ({});\n        }\n    });\n\n    // Let extensions to register additional menuItem and nestedMenuItem.\n    /** @type {import('./extension/contextmenus').UserDefinedItem[]} */\n    const widgetsWithExtensions = getMenuItemProviders().flatMap(provider => provider(ctx));\n    widgetsWithExtensions.forEach(menuItem => {\n        if (menuItem.subMenuItems) {\n            // It is a nested menu.\n            editor.ui.registry.addNestedMenuItem(`widgethub_${menuItem.name}`, {\n                icon: menuItem.icon,\n                text: menuItem.title,\n                getSubmenuItems: menuItem.subMenuItems,\n            });\n        } else if (menuItem.onAction) {\n            // It is a simple menu item.\n            editor.ui.registry.addMenuItem(`widgethub_${menuItem.name}`, {\n                icon: menuItem.icon,\n                text: menuItem.title,\n                onAction: menuItem.onAction,\n            });\n        }\n    });\n\n    editor.ui.registry.addContextMenu('tiny_ibwidgethub', {\n        /** @param {HTMLElement} element */\n        update: (element) => {\n            // Get rid of previous paths\n            ctx.actionPaths = {};\n            // Look for a context\n            ctx.path = domSrv.findWidgetOnEventPath(widgetList, element);\n            if (!ctx.path?.widget || ctx.path.widget.prop(\"contexttoolbar\")) {\n                // Widget not found in the searchPath or it must be displayed as toolbar\n                return '';\n            }\n            const widget = ctx.path.widget;\n            /** @type {string[]} */\n            let menuItems = [];\n            if (hasBindings(widget)) {\n                menuItems.push('modal');\n            }\n            // Does this widget bubble?\n            /** @type {PathResult | null} */\n            let parentPath = null;\n            if (widget.prop('bubbles')) {\n                const parentElem = ctx.path?.elem?.[0]?.parentElement;\n                if (parentElem) {\n                    const p = domSrv.findWidgetOnEventPath(widgetList, parentElem);\n                    if (p && p.widget?.key === widget.prop('bubbles')) {\n                        parentPath = p;\n                    }\n                }\n            }\n\n            const populateMenuItems = function(/** @type {PathResult} **/ path) {\n                // Now look for contextmenu property in widget definition\n                /** @type {{predicate: string, actions: string}[] | undefined} */\n                let contextmenu = path.widget?.prop('contextmenu');\n                if (!contextmenu) {\n                    return;\n                }\n                if (!Array.isArray(contextmenu)) {\n                    contextmenu = [contextmenu];\n                }\n                contextmenu.forEach(cm => {\n                    // Does the element matches the predicate?\n                    /** @type {HTMLElement | null} */\n                    let targetElem = null;\n                    // If predicate is unset then use the widget root elem\n                    if (!cm.predicate) {\n                        targetElem = path?.elem?.[0] ?? null;\n                    } else if (element.matches(cm.predicate)) {\n                        targetElem = element;\n                    } else {\n                        targetElem = element.closest(cm.predicate);\n                    }\n                    if (!targetElem) {\n                        return;\n                    }\n                    const newActionsToAdd = cm.actions.split(' ')\n                        .map(e => e.trim())\n                        // moveleft/right should be mapped into movebefore/moveafter\n                        .map(action => {\n                            if (action === 'moveleft') {\n                                return 'movebefore';\n                            }\n                            if (action === 'moveright') {\n                                return 'moveafter';\n                            }\n                            return action;\n                        })\n                        // Never duplicate actions from different sources.\n                        .filter(e => e === '|' || !menuItems.includes(e));\n                    menuItems.push(...newActionsToAdd);\n\n                    // Register the new paths of every action\n                    newActionsToAdd.filter(e => e !== '|').forEach((/** @type {string} */ e) => {\n                        path.targetElement = jQuery(targetElem);\n                        ctx.actionPaths[e] = {...path};\n                    });\n                });\n            };\n\n            if (parentPath) {\n                // Give precedence to the parent menus.\n                populateMenuItems(parentPath);\n            }\n            populateMenuItems(ctx.path);\n\n            menuItems = menuItems.map(e => e === '|' ? '|' : `widgethub_${e}_item`);\n            // Check if the current widget has any action registered by extensions\n            const actionNames = widgetsWithExtensions\n                .filter(e => matchesCondition(e.condition, widget.key))\n                .map(e => `widgethub_${e.name}`);\n            menuItems.push(...actionNames);\n\n            // Unwrap action always to the end\n            if (widget.unwrap) {\n                menuItems.push('widgethub_unwrap_item');\n            }\n            return menuItems.join(' ');\n        }\n    });\n\n    // Look for widgets that need context toolbar\n    widgetList.filter(widget => needsContextMenu(widget)).forEach(widget => {\n        const items = [];\n        if (hasBindings(widget)) {\n            items.push('modal');\n        }\n        if (widget.unwrap) {\n            items.push('unwrap');\n        }\n        if (widget.prop(\"contexttoolbar\")) {\n            editor.ui.registry.addContextToolbar(`widgethub_ctb_${widget.key}`, {\n                /** @param {HTMLElement} node */\n                predicate: function(node) {\n                    return domSrv.matchesSelectors(node, widget.selectors);\n                },\n                items: items.map(e => `widgethub_${e}_btn`).join(' '),\n                position: 'node'\n            });\n        }\n    });\n}\n"],"names":["editor","ctx","actionPaths","jQuery","ui","registry","addIcon","ICONS","defineIcons","component","strProperties","strUnwrap","strMoveUp","strMoveDown","strMoveAfter","strMoveBefore","strInsert","strRemove","strPrintable","key","widgetList","Object","values","domSrv","predefinedActions","factory","unwrap","path","elem","widget","_path$widget","toUnpack","find","text","replaceWith","forEach","listener","movebefore","$e","targetElement","$root","prev","insertAfter","closest","length","findReferences","$ref","prev2","moveafter","next","insertBefore","next2","insertafter","idMap","smartClone","removeClass","remove","$parent","parent","children","printable","toggleClass","moveup","movedown","moveleft","moveright","predefinedActionsFactory","showPropertiesAction","async","findWidgetOnEventPath","selection","getNode","widgetPropertiesCtrl","show","genericAction","name","action","addButton","icon","tooltip","onAction","addMenuItem","addToggleMenuItem","onSetup","api","toggleState","_ctx$path","_ctx$path$elem","hasClass","setActive","widgetsWithExtensions","flatMap","provider","menuItem","subMenuItems","addNestedMenuItem","title","getSubmenuItems","addContextMenu","update","element","_ctx$path2","prop","menuItems","hasBindings","push","parentPath","parentElem","_ctx$path3","_ctx$path3$elem","_ctx$path3$elem$","parentElement","p","populateMenuItems","contextmenu","_path$widget2","Array","isArray","cm","targetElem","predicate","matches","newActionsToAdd","actions","split","map","e","trim","filter","includes","actionNames","condition","RegExp","test","matchesCondition","join","needsContextMenu","items","addContextToolbar","node","matchesSelectors","selectors","position","parameters","_widget$parameters","some","param","undefined","bind"],"mappings":"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"}